

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Thu Jan 30 01:27:57 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	text4,local,class=CODE,merge=1,delta=2
    12                           	psect	text5,local,class=CODE,merge=1,delta=2
    13                           	dabs	1,0x7E,2
    14  0000                     
    15                           ; Version 2.10
    16                           ; Generated 31/07/2019 GMT
    17                           ; 
    18                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    19                           ; All rights reserved.
    20                           ; 
    21                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    22                           ; 
    23                           ; Redistribution and use in source and binary forms, with or without modification, are
    24                           ; permitted provided that the following conditions are met:
    25                           ; 
    26                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    27                           ;        conditions and the following disclaimer.
    28                           ; 
    29                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    30                           ;        of conditions and the following disclaimer in the documentation and/or other
    31                           ;        materials provided with the distribution.
    32                           ; 
    33                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    34                           ;        software without specific prior written permission.
    35                           ; 
    36                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    37                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    38                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    39                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    40                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    41                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    42                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    43                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    44                           ; 
    45                           ; 
    46                           ; Code-generator required, PIC16F887 Definitions
    47                           ; 
    48                           ; SFR Addresses
    49  0000                     	;# 
    50  0001                     	;# 
    51  0002                     	;# 
    52  0003                     	;# 
    53  0004                     	;# 
    54  0005                     	;# 
    55  0006                     	;# 
    56  0007                     	;# 
    57  0008                     	;# 
    58  0009                     	;# 
    59  000A                     	;# 
    60  000B                     	;# 
    61  000C                     	;# 
    62  000D                     	;# 
    63  000E                     	;# 
    64  000E                     	;# 
    65  000F                     	;# 
    66  0010                     	;# 
    67  0011                     	;# 
    68  0012                     	;# 
    69  0013                     	;# 
    70  0014                     	;# 
    71  0015                     	;# 
    72  0015                     	;# 
    73  0016                     	;# 
    74  0017                     	;# 
    75  0018                     	;# 
    76  0019                     	;# 
    77  001A                     	;# 
    78  001B                     	;# 
    79  001B                     	;# 
    80  001C                     	;# 
    81  001D                     	;# 
    82  001E                     	;# 
    83  001F                     	;# 
    84  0081                     	;# 
    85  0085                     	;# 
    86  0086                     	;# 
    87  0087                     	;# 
    88  0088                     	;# 
    89  0089                     	;# 
    90  008C                     	;# 
    91  008D                     	;# 
    92  008E                     	;# 
    93  008F                     	;# 
    94  0090                     	;# 
    95  0091                     	;# 
    96  0092                     	;# 
    97  0093                     	;# 
    98  0093                     	;# 
    99  0093                     	;# 
   100  0094                     	;# 
   101  0095                     	;# 
   102  0096                     	;# 
   103  0097                     	;# 
   104  0098                     	;# 
   105  0099                     	;# 
   106  009A                     	;# 
   107  009B                     	;# 
   108  009C                     	;# 
   109  009D                     	;# 
   110  009E                     	;# 
   111  009F                     	;# 
   112  0105                     	;# 
   113  0107                     	;# 
   114  0108                     	;# 
   115  0109                     	;# 
   116  010C                     	;# 
   117  010C                     	;# 
   118  010D                     	;# 
   119  010E                     	;# 
   120  010F                     	;# 
   121  0185                     	;# 
   122  0187                     	;# 
   123  0188                     	;# 
   124  0189                     	;# 
   125  018C                     	;# 
   126  018D                     	;# 
   127  0000                     	;# 
   128  0001                     	;# 
   129  0002                     	;# 
   130  0003                     	;# 
   131  0004                     	;# 
   132  0005                     	;# 
   133  0006                     	;# 
   134  0007                     	;# 
   135  0008                     	;# 
   136  0009                     	;# 
   137  000A                     	;# 
   138  000B                     	;# 
   139  000C                     	;# 
   140  000D                     	;# 
   141  000E                     	;# 
   142  000E                     	;# 
   143  000F                     	;# 
   144  0010                     	;# 
   145  0011                     	;# 
   146  0012                     	;# 
   147  0013                     	;# 
   148  0014                     	;# 
   149  0015                     	;# 
   150  0015                     	;# 
   151  0016                     	;# 
   152  0017                     	;# 
   153  0018                     	;# 
   154  0019                     	;# 
   155  001A                     	;# 
   156  001B                     	;# 
   157  001B                     	;# 
   158  001C                     	;# 
   159  001D                     	;# 
   160  001E                     	;# 
   161  001F                     	;# 
   162  0081                     	;# 
   163  0085                     	;# 
   164  0086                     	;# 
   165  0087                     	;# 
   166  0088                     	;# 
   167  0089                     	;# 
   168  008C                     	;# 
   169  008D                     	;# 
   170  008E                     	;# 
   171  008F                     	;# 
   172  0090                     	;# 
   173  0091                     	;# 
   174  0092                     	;# 
   175  0093                     	;# 
   176  0093                     	;# 
   177  0093                     	;# 
   178  0094                     	;# 
   179  0095                     	;# 
   180  0096                     	;# 
   181  0097                     	;# 
   182  0098                     	;# 
   183  0099                     	;# 
   184  009A                     	;# 
   185  009B                     	;# 
   186  009C                     	;# 
   187  009D                     	;# 
   188  009E                     	;# 
   189  009F                     	;# 
   190  0105                     	;# 
   191  0107                     	;# 
   192  0108                     	;# 
   193  0109                     	;# 
   194  010C                     	;# 
   195  010C                     	;# 
   196  010D                     	;# 
   197  010E                     	;# 
   198  010F                     	;# 
   199  0185                     	;# 
   200  0187                     	;# 
   201  0188                     	;# 
   202  0189                     	;# 
   203  018C                     	;# 
   204  018D                     	;# 
   205  0007                     _PORTC	set	7
   206  0006                     _PORTB	set	6
   207  0005                     _PORTA	set	5
   208  0008                     _PORTDbits	set	8
   209  0088                     _TRISD	set	136
   210  0087                     _TRISC	set	135
   211  0086                     _TRISB	set	134
   212  0085                     _TRISA	set	133
   213  0189                     _ANSELH	set	393
   214  0188                     _ANSEL	set	392
   215                           
   216                           ; #config settings
   217  0000                     
   218                           	psect	cinit
   219  07F4                     start_initialization:	
   220  07F4                     __initialization:	
   221                           
   222                           ; Clear objects allocated to COMMON
   223  07F4  01F0               	clrf	__pbssCOMMON& (0+127)
   224  07F5  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
   225  07F6  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
   226  07F7  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
   227  07F8  01F4               	clrf	(__pbssCOMMON+4)& (0+127)
   228  07F9  01F5               	clrf	(__pbssCOMMON+5)& (0+127)
   229  07FA  01F6               	clrf	(__pbssCOMMON+6)& (0+127)
   230  07FB  01F7               	clrf	(__pbssCOMMON+7)& (0+127)
   231  07FC                     end_of_initialization:	
   232                           ;End of C runtime variable initialization code
   233                           
   234  07FC                     __end_of__initialization:	
   235  07FC  0183               	clrf	3
   236  07FD  120A  118A  2F4E   	ljmp	_main	;jump to C main() function
   237                           
   238                           	psect	bssCOMMON
   239  0070                     __pbssCOMMON:	
   240  0070                     _pull:	
   241  0070                     	ds	2
   242  0072                     _b:	
   243  0072                     	ds	2
   244  0074                     _a:	
   245  0074                     	ds	2
   246  0076                     _on:	
   247  0076                     	ds	2
   248                           
   249                           	psect	cstackCOMMON
   250  0078                     __pcstackCOMMON:	
   251  0078                     ?_configp:	
   252  0078                     ??_configp:	
   253                           ; 1 bytes @ 0x0
   254                           
   255  0078                     ?_ciclocheck:	
   256                           ; 1 bytes @ 0x0
   257                           
   258  0078                     ?_Start:	
   259                           ; 1 bytes @ 0x0
   260                           
   261  0078                     ?_sevenseg:	
   262                           ; 1 bytes @ 0x0
   263                           
   264  0078                     ?_delay_ms:	
   265                           ; 1 bytes @ 0x0
   266                           
   267  0078                     ?_main:	
   268                           ; 1 bytes @ 0x0
   269                           
   270  0078                     delay_ms@dms:	
   271                           ; 1 bytes @ 0x0
   272                           
   273                           
   274                           ; 2 bytes @ 0x0
   275  0078                     	ds	2
   276  007A                     ??_delay_ms:	
   277  007A                     delay_ms@i:	
   278                           ; 1 bytes @ 0x2
   279                           
   280                           
   281                           ; 2 bytes @ 0x2
   282  007A                     	ds	2
   283  007C                     delay_ms@j:	
   284                           
   285                           ; 2 bytes @ 0x4
   286  007C                     	ds	2
   287  007E                     ??_ciclocheck:	
   288  007E                     ??_Start:	
   289                           ; 1 bytes @ 0x6
   290                           
   291  007E                     ??_sevenseg:	
   292                           ; 1 bytes @ 0x6
   293                           
   294  007E                     ??_main:	
   295                           ; 1 bytes @ 0x6
   296                           
   297                           
   298                           	psect	maintext
   299  074E                     __pmaintext:	
   300                           ; 1 bytes @ 0x6
   301 ;;
   302 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   303 ;;
   304 ;; *************** function _main *****************
   305 ;; Defined at:
   306 ;;		line 46 in file "LAB1.c"
   307 ;; Parameters:    Size  Location     Type
   308 ;;		None
   309 ;; Auto vars:     Size  Location     Type
   310 ;;		None
   311 ;; Return value:  Size  Location     Type
   312 ;;                  1    wreg      void 
   313 ;; Registers used:
   314 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   315 ;; Tracked objects:
   316 ;;		On entry : B00/0
   317 ;;		On exit  : 0/0
   318 ;;		Unchanged: 0/0
   319 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   320 ;;      Params:         0       0       0       0       0
   321 ;;      Locals:         0       0       0       0       0
   322 ;;      Temps:          0       0       0       0       0
   323 ;;      Totals:         0       0       0       0       0
   324 ;;Total ram usage:        0 bytes
   325 ;; Hardware stack levels required when called:    4
   326 ;; This function calls:
   327 ;;		_ciclocheck
   328 ;;		_configp
   329 ;; This function is called by:
   330 ;;		Startup code after reset
   331 ;; This function uses a non-reentrant model
   332 ;;
   333                           
   334                           
   335                           ;psect for function _main
   336  074E                     _main:	
   337  074E                     l845:	
   338                           ;incstack = 0
   339                           ; Regs used in _main: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   340                           
   341                           
   342                           ;LAB1.c: 47:     configp ();
   343  074E  120A  118A  275B  120A  118A  	fcall	_configp
   344  0753                     l847:	
   345                           
   346                           ;LAB1.c: 48:     ciclocheck();
   347  0753  120A  118A  276C  120A  118A  	fcall	_ciclocheck
   348  0758                     l43:	
   349  0758  120A  118A  2800   	ljmp	start
   350  075B                     __end_of_main:	
   351                           
   352                           	psect	text1
   353  075B                     __ptext1:	
   354 ;; *************** function _configp *****************
   355 ;; Defined at:
   356 ;;		line 102 in file "LAB1.c"
   357 ;; Parameters:    Size  Location     Type
   358 ;;		None
   359 ;; Auto vars:     Size  Location     Type
   360 ;;		None
   361 ;; Return value:  Size  Location     Type
   362 ;;                  1    wreg      void 
   363 ;; Registers used:
   364 ;;		wreg, status,2
   365 ;; Tracked objects:
   366 ;;		On entry : 0/0
   367 ;;		On exit  : 0/0
   368 ;;		Unchanged: 0/0
   369 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   370 ;;      Params:         0       0       0       0       0
   371 ;;      Locals:         0       0       0       0       0
   372 ;;      Temps:          0       0       0       0       0
   373 ;;      Totals:         0       0       0       0       0
   374 ;;Total ram usage:        0 bytes
   375 ;; Hardware stack levels used:    1
   376 ;; This function calls:
   377 ;;		Nothing
   378 ;; This function is called by:
   379 ;;		_main
   380 ;; This function uses a non-reentrant model
   381 ;;
   382                           
   383                           
   384                           ;psect for function _configp
   385  075B                     _configp:	
   386  075B                     l727:	
   387                           ;incstack = 0
   388                           ; Regs used in _configp: [wreg+status,2]
   389                           
   390                           
   391                           ;LAB1.c: 104:     TRISA = 0x00;
   392  075B  1683               	bsf	3,5	;RP0=1, select bank1
   393  075C  1303               	bcf	3,6	;RP1=0, select bank1
   394  075D  0185               	clrf	5	;volatile
   395                           
   396                           ;LAB1.c: 105:     TRISB = 0x00;
   397  075E  0186               	clrf	6	;volatile
   398                           
   399                           ;LAB1.c: 106:     TRISC = 0x00;
   400  075F  0187               	clrf	7	;volatile
   401  0760                     l729:	
   402                           
   403                           ;LAB1.c: 107:     TRISD = 0x0D;
   404  0760  300D               	movlw	13
   405  0761  0088               	movwf	8	;volatile
   406  0762                     l731:	
   407                           
   408                           ;LAB1.c: 109:     PORTA = 0x00;
   409  0762  1283               	bcf	3,5	;RP0=0, select bank0
   410  0763  1303               	bcf	3,6	;RP1=0, select bank0
   411  0764  0185               	clrf	5	;volatile
   412  0765                     l733:	
   413                           
   414                           ;LAB1.c: 110:     PORTB = 0x00;
   415  0765  0186               	clrf	6	;volatile
   416  0766                     l735:	
   417                           
   418                           ;LAB1.c: 111:     PORTC = 0x00;
   419  0766  0187               	clrf	7	;volatile
   420  0767                     l737:	
   421                           
   422                           ;LAB1.c: 113:     ANSEL = 0;
   423  0767  1683               	bsf	3,5	;RP0=1, select bank3
   424  0768  1703               	bsf	3,6	;RP1=1, select bank3
   425  0769  0188               	clrf	8	;volatile
   426  076A                     l739:	
   427                           
   428                           ;LAB1.c: 114:     ANSELH =0;
   429  076A  0189               	clrf	9	;volatile
   430  076B                     l58:	
   431  076B  0008               	return
   432  076C                     __end_of_configp:	
   433                           
   434                           	psect	text2
   435  076C                     __ptext2:	
   436 ;; *************** function _ciclocheck *****************
   437 ;; Defined at:
   438 ;;		line 54 in file "LAB1.c"
   439 ;; Parameters:    Size  Location     Type
   440 ;;		None
   441 ;; Auto vars:     Size  Location     Type
   442 ;;		None
   443 ;; Return value:  Size  Location     Type
   444 ;;                  1    wreg      void 
   445 ;; Registers used:
   446 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   447 ;; Tracked objects:
   448 ;;		On entry : 0/0
   449 ;;		On exit  : 0/0
   450 ;;		Unchanged: 0/0
   451 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   452 ;;      Params:         0       0       0       0       0
   453 ;;      Locals:         0       0       0       0       0
   454 ;;      Temps:          0       0       0       0       0
   455 ;;      Totals:         0       0       0       0       0
   456 ;;Total ram usage:        0 bytes
   457 ;; Hardware stack levels used:    1
   458 ;; Hardware stack levels required when called:    3
   459 ;; This function calls:
   460 ;;		_Start
   461 ;; This function is called by:
   462 ;;		_main
   463 ;; This function uses a non-reentrant model
   464 ;;
   465                           
   466                           
   467                           ;psect for function _ciclocheck
   468  076C                     _ciclocheck:	
   469  076C                     l835:	
   470                           ;incstack = 0
   471                           ; Regs used in _ciclocheck: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   472                           
   473                           
   474                           ;LAB1.c: 55:     while (on == 0){
   475  076C  2F83               	goto	l843
   476  076D                     l47:	
   477                           
   478                           ;LAB1.c: 56:         if (PORTDbits.RD1 == 1){
   479  076D  1283               	bcf	3,5	;RP0=0, select bank0
   480  076E  1303               	bcf	3,6	;RP1=0, select bank0
   481  076F  1C88               	btfss	8,1	;volatile
   482  0770  2F72               	goto	u171
   483  0771  2F73               	goto	u170
   484  0772                     u171:	
   485  0772  2F76               	goto	l839
   486  0773                     u170:	
   487  0773                     l837:	
   488                           
   489                           ;LAB1.c: 57:             on = 0;
   490  0773  01F6               	clrf	_on
   491  0774  01F7               	clrf	_on+1
   492                           
   493                           ;LAB1.c: 58:         } else {
   494  0775  2F7E               	goto	l841
   495  0776                     l839:	
   496                           
   497                           ;LAB1.c: 59:             on = 1;
   498  0776  3001               	movlw	1
   499  0777  00F6               	movwf	_on
   500  0778  3000               	movlw	0
   501  0779  00F7               	movwf	_on+1
   502                           
   503                           ;LAB1.c: 60:             pull =1;
   504  077A  3001               	movlw	1
   505  077B  00F0               	movwf	_pull
   506  077C  3000               	movlw	0
   507  077D  00F1               	movwf	_pull+1
   508  077E                     l841:	
   509                           
   510                           ;LAB1.c: 62:         Start();
   511  077E  120A  118A  2742  120A  118A  	fcall	_Start
   512  0783                     l843:	
   513                           
   514                           ;LAB1.c: 55:     while (on == 0){
   515  0783  0876               	movf	_on,w
   516  0784  0477               	iorwf	_on+1,w
   517  0785  1903               	btfsc	3,2
   518  0786  2F88               	goto	u181
   519  0787  2F89               	goto	u180
   520  0788                     u181:	
   521  0788  2F6D               	goto	l47
   522  0789                     u180:	
   523  0789                     l51:	
   524  0789  0008               	return
   525  078A                     __end_of_ciclocheck:	
   526                           
   527                           	psect	text3
   528  0742                     __ptext3:	
   529 ;; *************** function _Start *****************
   530 ;; Defined at:
   531 ;;		line 85 in file "LAB1.c"
   532 ;; Parameters:    Size  Location     Type
   533 ;;		None
   534 ;; Auto vars:     Size  Location     Type
   535 ;;		None
   536 ;; Return value:  Size  Location     Type
   537 ;;                  1    wreg      void 
   538 ;; Registers used:
   539 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   540 ;; Tracked objects:
   541 ;;		On entry : 0/0
   542 ;;		On exit  : 0/0
   543 ;;		Unchanged: 0/0
   544 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   545 ;;      Params:         0       0       0       0       0
   546 ;;      Locals:         0       0       0       0       0
   547 ;;      Temps:          0       0       0       0       0
   548 ;;      Totals:         0       0       0       0       0
   549 ;;Total ram usage:        0 bytes
   550 ;; Hardware stack levels used:    1
   551 ;; Hardware stack levels required when called:    2
   552 ;; This function calls:
   553 ;;		_sevenseg
   554 ;; This function is called by:
   555 ;;		_ciclocheck
   556 ;; This function uses a non-reentrant model
   557 ;;
   558                           
   559                           
   560                           ;psect for function _Start
   561  0742                     _Start:	
   562  0742                     l831:	
   563                           ;incstack = 0
   564                           ; Regs used in _Start: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   565                           
   566                           
   567                           ;LAB1.c: 86:     if (PORTDbits.RD0==0){
   568  0742  1283               	bcf	3,5	;RP0=0, select bank0
   569  0743  1303               	bcf	3,6	;RP1=0, select bank0
   570  0744  1808               	btfsc	8,0	;volatile
   571  0745  2F47               	goto	u161
   572  0746  2F48               	goto	u160
   573  0747                     u161:	
   574  0747  2F4D               	goto	l55
   575  0748                     u160:	
   576  0748                     l833:	
   577                           
   578                           ;LAB1.c: 87:     sevenseg();
   579  0748  120A  118A  27B3  120A  118A  	fcall	_sevenseg
   580  074D                     l55:	
   581  074D  0008               	return
   582  074E                     __end_of_Start:	
   583                           
   584                           	psect	text4
   585  07B3                     __ptext4:	
   586 ;; *************** function _sevenseg *****************
   587 ;; Defined at:
   588 ;;		line 144 in file "LAB1.c"
   589 ;; Parameters:    Size  Location     Type
   590 ;;		None
   591 ;; Auto vars:     Size  Location     Type
   592 ;;		None
   593 ;; Return value:  Size  Location     Type
   594 ;;                  1    wreg      void 
   595 ;; Registers used:
   596 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   597 ;; Tracked objects:
   598 ;;		On entry : 0/0
   599 ;;		On exit  : 0/0
   600 ;;		Unchanged: 0/0
   601 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   602 ;;      Params:         0       0       0       0       0
   603 ;;      Locals:         0       0       0       0       0
   604 ;;      Temps:          0       0       0       0       0
   605 ;;      Totals:         0       0       0       0       0
   606 ;;Total ram usage:        0 bytes
   607 ;; Hardware stack levels used:    1
   608 ;; Hardware stack levels required when called:    1
   609 ;; This function calls:
   610 ;;		_delay_ms
   611 ;; This function is called by:
   612 ;;		_Start
   613 ;; This function uses a non-reentrant model
   614 ;;
   615                           
   616                           
   617                           ;psect for function _sevenseg
   618  07B3                     _sevenseg:	
   619  07B3                     l799:	
   620                           ;incstack = 0
   621                           ; Regs used in _sevenseg: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   622                           
   623                           
   624                           ;LAB1.c: 145:     PORTDbits.RD4 = 1;
   625  07B3  1283               	bcf	3,5	;RP0=0, select bank0
   626  07B4  1303               	bcf	3,6	;RP1=0, select bank0
   627  07B5  1608               	bsf	8,4	;volatile
   628                           
   629                           ;LAB1.c: 146:     PORTDbits.RD5 = 1;
   630  07B6  1688               	bsf	8,5	;volatile
   631                           
   632                           ;LAB1.c: 147:     PORTDbits.RD6 = 1;
   633  07B7  1708               	bsf	8,6	;volatile
   634  07B8                     l801:	
   635                           
   636                           ;LAB1.c: 148:     PORTC = 0x6D;
   637  07B8  306D               	movlw	109
   638  07B9  0087               	movwf	7	;volatile
   639  07BA                     l803:	
   640                           
   641                           ;LAB1.c: 149:     delay_ms(250);
   642  07BA  30FA               	movlw	250
   643  07BB  00F8               	movwf	delay_ms@dms
   644  07BC  3000               	movlw	0
   645  07BD  00F9               	movwf	delay_ms@dms+1
   646  07BE  120A  118A  278A  120A  118A  	fcall	_delay_ms
   647  07C3                     l805:	
   648                           
   649                           ;LAB1.c: 151:     PORTDbits.RD4 = 0;
   650  07C3  1283               	bcf	3,5	;RP0=0, select bank0
   651  07C4  1303               	bcf	3,6	;RP1=0, select bank0
   652  07C5  1208               	bcf	8,4	;volatile
   653  07C6                     l807:	
   654                           
   655                           ;LAB1.c: 152:     PORTDbits.RD5 = 1;
   656  07C6  1688               	bsf	8,5	;volatile
   657  07C7                     l809:	
   658                           
   659                           ;LAB1.c: 153:     PORTDbits.RD6 = 1;
   660  07C7  1708               	bsf	8,6	;volatile
   661  07C8                     l811:	
   662                           
   663                           ;LAB1.c: 154:     PORTC = 0xCD;
   664  07C8  30CD               	movlw	205
   665  07C9  0087               	movwf	7	;volatile
   666                           
   667                           ;LAB1.c: 155:     delay_ms(250);
   668  07CA  30FA               	movlw	250
   669  07CB  00F8               	movwf	delay_ms@dms
   670  07CC  3000               	movlw	0
   671  07CD  00F9               	movwf	delay_ms@dms+1
   672  07CE  120A  118A  278A  120A  118A  	fcall	_delay_ms
   673  07D3                     l813:	
   674                           
   675                           ;LAB1.c: 157:     PORTDbits.RD4 = 0;
   676  07D3  1283               	bcf	3,5	;RP0=0, select bank0
   677  07D4  1303               	bcf	3,6	;RP1=0, select bank0
   678  07D5  1208               	bcf	8,4	;volatile
   679  07D6                     l815:	
   680                           
   681                           ;LAB1.c: 158:     PORTDbits.RD5 = 0;
   682  07D6  1288               	bcf	8,5	;volatile
   683  07D7                     l817:	
   684                           
   685                           ;LAB1.c: 159:     PORTDbits.RD6 = 1;
   686  07D7  1708               	bsf	8,6	;volatile
   687  07D8                     l819:	
   688                           
   689                           ;LAB1.c: 160:     PORTC = 0x28;
   690  07D8  3028               	movlw	40
   691  07D9  0087               	movwf	7	;volatile
   692  07DA                     l821:	
   693                           
   694                           ;LAB1.c: 161:     delay_ms(250);
   695  07DA  30FA               	movlw	250
   696  07DB  00F8               	movwf	delay_ms@dms
   697  07DC  3000               	movlw	0
   698  07DD  00F9               	movwf	delay_ms@dms+1
   699  07DE  120A  118A  278A  120A  118A  	fcall	_delay_ms
   700  07E3                     l823:	
   701                           
   702                           ;LAB1.c: 163:     PORTDbits.RD4 = 0;
   703  07E3  1283               	bcf	3,5	;RP0=0, select bank0
   704  07E4  1303               	bcf	3,6	;RP1=0, select bank0
   705  07E5  1208               	bcf	8,4	;volatile
   706  07E6                     l825:	
   707                           
   708                           ;LAB1.c: 164:     PORTDbits.RD5 = 0;
   709  07E6  1288               	bcf	8,5	;volatile
   710  07E7                     l827:	
   711                           
   712                           ;LAB1.c: 165:     PORTDbits.RD6 = 0;
   713  07E7  1308               	bcf	8,6	;volatile
   714                           
   715                           ;LAB1.c: 166:     PORTC = 0xFE;
   716  07E8  30FE               	movlw	254
   717  07E9  0087               	movwf	7	;volatile
   718  07EA                     l829:	
   719                           
   720                           ;LAB1.c: 167:     delay_ms(250);
   721  07EA  30FA               	movlw	250
   722  07EB  00F8               	movwf	delay_ms@dms
   723  07EC  3000               	movlw	0
   724  07ED  00F9               	movwf	delay_ms@dms+1
   725  07EE  120A  118A  278A  120A  118A  	fcall	_delay_ms
   726  07F3                     l77:	
   727  07F3  0008               	return
   728  07F4                     __end_of_sevenseg:	
   729                           
   730                           	psect	text5
   731  078A                     __ptext5:	
   732 ;; *************** function _delay_ms *****************
   733 ;; Defined at:
   734 ;;		line 170 in file "LAB1.c"
   735 ;; Parameters:    Size  Location     Type
   736 ;;  dms             2    0[COMMON] unsigned int 
   737 ;; Auto vars:     Size  Location     Type
   738 ;;  j               2    4[COMMON] int 
   739 ;;  i               2    2[COMMON] int 
   740 ;; Return value:  Size  Location     Type
   741 ;;                  1    wreg      void 
   742 ;; Registers used:
   743 ;;		wreg, status,2, btemp+1
   744 ;; Tracked objects:
   745 ;;		On entry : 0/0
   746 ;;		On exit  : 0/0
   747 ;;		Unchanged: 0/0
   748 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   749 ;;      Params:         2       0       0       0       0
   750 ;;      Locals:         4       0       0       0       0
   751 ;;      Temps:          0       0       0       0       0
   752 ;;      Totals:         6       0       0       0       0
   753 ;;Total ram usage:        6 bytes
   754 ;; Hardware stack levels used:    1
   755 ;; This function calls:
   756 ;;		Nothing
   757 ;; This function is called by:
   758 ;;		_sevenseg
   759 ;; This function uses a non-reentrant model
   760 ;;
   761                           
   762                           
   763                           ;psect for function _delay_ms
   764  078A                     _delay_ms:	
   765  078A                     l785:	
   766                           ;incstack = 0
   767                           ; Regs used in _delay_ms: [wreg+status,2+btemp+1]
   768                           
   769                           
   770                           ;LAB1.c: 171:     for(int i = 0; i<dms; i++){
   771  078A  01FA               	clrf	delay_ms@i
   772  078B  01FB               	clrf	delay_ms@i+1
   773  078C  2FA8               	goto	l80
   774  078D                     l787:	
   775                           
   776                           ;LAB1.c: 172:         for(int j = 0; j<255; j++);
   777  078D  01FC               	clrf	delay_ms@j
   778  078E  01FD               	clrf	delay_ms@j+1
   779  078F                     l793:	
   780  078F  3001               	movlw	1
   781  0790  07FC               	addwf	delay_ms@j,f
   782  0791  1803               	skipnc
   783  0792  0AFD               	incf	delay_ms@j+1,f
   784  0793  3000               	movlw	0
   785  0794  07FD               	addwf	delay_ms@j+1,f
   786  0795                     l795:	
   787  0795  087D               	movf	delay_ms@j+1,w
   788  0796  3A80               	xorlw	128
   789  0797  00FF               	movwf	btemp+1
   790  0798  3080               	movlw	128
   791  0799  027F               	subwf	btemp+1,w
   792  079A  1D03               	skipz
   793  079B  2F9E               	goto	u145
   794  079C  30FF               	movlw	255
   795  079D  027C               	subwf	delay_ms@j,w
   796  079E                     u145:	
   797  079E  1C03               	skipc
   798  079F  2FA1               	goto	u141
   799  07A0  2FA2               	goto	u140
   800  07A1                     u141:	
   801  07A1  2F8F               	goto	l793
   802  07A2                     u140:	
   803  07A2                     l797:	
   804                           
   805                           ;LAB1.c: 173:     }
   806  07A2  3001               	movlw	1
   807  07A3  07FA               	addwf	delay_ms@i,f
   808  07A4  1803               	skipnc
   809  07A5  0AFB               	incf	delay_ms@i+1,f
   810  07A6  3000               	movlw	0
   811  07A7  07FB               	addwf	delay_ms@i+1,f
   812  07A8                     l80:	
   813  07A8  0879               	movf	delay_ms@dms+1,w
   814  07A9  027B               	subwf	delay_ms@i+1,w
   815  07AA  1D03               	skipz
   816  07AB  2FAE               	goto	u155
   817  07AC  0878               	movf	delay_ms@dms,w
   818  07AD  027A               	subwf	delay_ms@i,w
   819  07AE                     u155:	
   820  07AE  1C03               	skipc
   821  07AF  2FB1               	goto	u151
   822  07B0  2FB2               	goto	u150
   823  07B1                     u151:	
   824  07B1  2F8D               	goto	l787
   825  07B2                     u150:	
   826  07B2                     l85:	
   827  07B2  0008               	return
   828  07B3                     __end_of_delay_ms:	
   829  007E                     btemp	set	126	;btemp
   830  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         8
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      14
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _sevenseg->_delay_ms

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     396
                         _ciclocheck
                            _configp
 ---------------------------------------------------------------------------------
 (1) _configp                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ciclocheck                                           0     0      0     396
                              _Start
 ---------------------------------------------------------------------------------
 (2) _Start                                                0     0      0     396
                           _sevenseg
 ---------------------------------------------------------------------------------
 (3) _sevenseg                                             0     0      0     396
                           _delay_ms
 ---------------------------------------------------------------------------------
 (4) _delay_ms                                             6     4      2     396
                                              0 COMMON     6     4      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ciclocheck
     _Start
       _sevenseg
         _delay_ms
   _configp

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      6       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       E       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       E      12        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Thu Jan 30 01:27:57 2020

                      _a 0074                        _b 0072              __CFG_CP$OFF 0000  
                     l51 0789                       l43 0758                       l55 074D  
                     l47 076D                       l80 07A8                       l58 076B  
                     l85 07B2                       l77 07F3                       _on 0076  
                    l801 07B8                      l811 07C8                      l803 07BA  
                    l731 0762                      l821 07DA                      l813 07D3  
                    l805 07C3                      l733 0765                      l823 07E3  
                    l815 07D6                      l807 07C6                      l831 0742  
                    l735 0766                      l727 075B                      l825 07E6  
                    l817 07D7                      l809 07C7                      l833 0748  
                    l841 077E                      l737 0767                      l729 0760  
                    l827 07E7                      l819 07D8                      l843 0783  
                    l835 076C                      l739 076A                      l829 07EA  
                    l837 0773                      l845 074E                      l839 0776  
                    l847 0753                      l793 078F                      l785 078A  
                    l795 0795                      l787 078D                      l797 07A2  
                    l799 07B3                      u140 07A2                      u141 07A1  
                    u150 07B2                      u151 07B1                      u160 0748  
                    u145 079E                      u161 0747                      u170 0773  
                    u155 07AE                      u171 0772                      u180 0789  
                    u181 0788             __CFG_CPD$OFF 0000             __CFG_LVP$OFF 0000  
           __CFG_WRT$OFF 0000                     _main 074E                     _pull 0070  
                   btemp 007E            __CFG_BOREN$ON 0000                     start 0000  
          __CFG_IESO$OFF 0000            __CFG_MCLRE$ON 0000                    ?_main 0078  
          __CFG_WDTE$OFF 0000                    _ANSEL 0188                    _PORTA 0005  
                  _PORTB 0006                    _PORTC 0007                    _TRISA 0085  
                  _TRISB 0086                    _TRISC 0087                    _TRISD 0088  
         __CFG_FCMEN$OFF 0000          __end_of_configp 076C                    _Start 0742  
                  status 0003                    wtemp0 007E          __initialization 07F4  
           __end_of_main 075B                   ??_main 007E                   ?_Start 0078  
                 _ANSELH 0189         __end_of_delay_ms 07B3           __CFG_PWRTE$OFF 0000  
              ??_configp 0078         __end_of_sevenseg 07F4  __end_of__initialization 07FC  
         __pcstackCOMMON 0078            __end_of_Start 074E                  ??_Start 007E  
             _ciclocheck 076C               __pmaintext 074E                ?_delay_ms 0078  
              ?_sevenseg 0078                  __ptext1 075B                  __ptext2 076C  
                __ptext3 0742                  __ptext4 07B3                  __ptext5 078A  
                _configp 075B               ??_delay_ms 007A     end_of_initialization 07FC  
            ?_ciclocheck 0078               ??_sevenseg 007E                _PORTDbits 0008  
    start_initialization 07F4      __size_of_ciclocheck 001E              __pbssCOMMON 0070  
              ___latbits 0002        __size_of_delay_ms 0029   __CFG_FOSC$INTRC_CLKOUT 0000  
      __size_of_sevenseg 0041                 ?_configp 0078           __size_of_Start 000C  
              delay_ms@i 007A                delay_ms@j 007C             ??_ciclocheck 007E  
     __end_of_ciclocheck 078A         __size_of_configp 0011                 _delay_ms 078A  
      __CFG_BOR4V$BOR40V 0000            __size_of_main 000D                 _sevenseg 07B3  
            delay_ms@dms 0078  
